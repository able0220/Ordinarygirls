import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt



mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()


x_train.shape


plt.imshow(x_train[0])
plt.colorbar()
plt.show



x_train, x_test = x_train / 255.0, x_test / 255.0


plt.imshow(x_train[0])
plt.colorbar()
plt.show


model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(128, activation='relu'),
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10, activation='softmax')
])


model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])




model.fit(x_train, y_train, epochs=5)


model.evaluate(x_test,  y_test, verbose=2)

prediction = model.predict(x_test)

np.argmax(prediction[10])


plt.imshow(x_test[10])
plt.colorbar()
plt.show






from google.colab import files
test = files.upload()


from PIL import Image
import cv2


gray = cv2.imread("test1.png", cv2.IMREAD_GRAYSCALE)
plt.imshow(gray)


gray = cv2.resize(255-gray, (28,28))
test_num = gray.flatten() / 255.0
test_num = test_num.reshape((-1,28,28,1))


np.argmax(model.predict(test_num))